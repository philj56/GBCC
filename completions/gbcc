# vi: ft=bash

containsElement () {
        local e match="$1"
        shift
        for e; do [[ "$e" =~ $match ]] && return 0; done
        return 1
}

_gbcc() 
{
        local cur prev opts palettes remaining
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        prev="${COMP_WORDS[COMP_CWORD-1]}"
        opts="--autoresume --autosave --background --config --fractional --frame-blending --help --interlacing --palette --shader --save-dir --turbo --vsync --vram-window"
        palettes="blue brown dark-blue dark-brown dark-green green grey invert monochrome orange pastel red yellow"
        shaders="nothing colour\ correct subpixel dot\ matrix"


        case "${prev}" in
                --palette|-p)
                        COMPREPLY=( $(compgen -W "${palettes}" -- ${cur}) )
                        return 0
                        ;;
                --shader|-s)
                        tmp="${shaders//\\ /__}"
                        reply=( $(compgen -W "${tmp}" -- ${cur}) )
                        for r in "${reply[@]}"; do
                                COMPREPLY+=( "${r//__/ }" )
                        done
                        if (( "${#COMPREPLY[@]}" == 1 )); then
                                case "${COMPREPLY[0]}" in
                                        *\ * )
                                                COMPREPLY[0]="\"${COMPREPLY[0]}\""
                                                ;;
                                esac
                        fi
                        return 0
                        ;;
                --turbo|-t)
                        return 0
                        ;;
                --config|-c)
                        _filedir
                        return 0
                        ;;
		--save-dir|-S)
			# Really it'd be nice to just use fallthrough for this,
			# but macOS provides a bash version from 2007, which
			# doesn't support the ;& syntax.
                        _filedir
                        return 0
                        ;;
        esac
        case "${cur}" in
                -[a-zA-Z])
                        COMPREPLY=$cur
                        ;;
                -*)
                        remaining=$(echo ${opts[@]} ${COMP_WORDS[@]} ${COMP_WORDS[@]} | tr ' ' '\n' | sort | uniq -u | cat <(echo --cheat) -)
                        COMPREPLY=( $(compgen -W "${remaining}" -- ${cur}) )
                        return 0
                        ;;
                *)
                        if ! containsElement '.*\.gbc?' "${COMP_WORDS[@]}"; then
                                _filedir '*@(gb|gbc)'
                                return 0
                        fi
			remaining=$(echo ${opts[@]} ${COMP_WORDS[@]} ${COMP_WORDS[@]} | tr ' ' '\n' | sort | uniq -u | cat <(echo --cheat) -)
                        COMPREPLY=( $(compgen -W "${remaining}" -- ${cur}) )
                        return 0
                        ;;
        esac
        true
}
complete -F _gbcc gbcc
complete -F _gbcc gbcc-gtk
